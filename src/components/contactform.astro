---
import Button from "./ui/button.astro";
---

<!-- To make this contact form work, create your free access key from https://web3forms.com/
     Then you will get all form submissions in your email inbox. -->

<form
  action="https://www.fiskefrost.com/api/preregistrationHandler"
  method="POST"
  id="form"
  class="needs-validation"
  novalidate>
  <div class="mb-5">
    <input
      id="full_name"
      type="text"
      placeholder="Full Name"
      required
      class="box-content h-48 w-6 w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
      name="full_name"
    />
    <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
      Please provide full name.
    </div>
  </div>
  <div class="mb-5">
    <label for="email" class="sr-only">Email Address</label><input
      id="email"
      type="email"
      placeholder="Email Address"
      required
      name="email"
      class="box-content h-48 w-6 w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
    />
    <div class="empty-feedback text-red-400 text-sm mt-1">
      Please provide your email address.
    </div>
    <div class="invalid-feedback text-red-400 text-sm mt-1">
      Please provide a valid email address.
    </div>
  </div>
  <div class="mb-5">
    <label for="phone" class="sr-only">Phone Number</label><input
      id="phone"
      type="phone"
      placeholder="Phone Number"
      required
      name="phone"
      class="box-content h-48 w-6 w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
    />
    <div class="empty-feedback text-red-400 text-sm mt-1">
      Please provide your phone number.
    </div>
    <div class="invalid-feedback text-red-400 text-sm mt-1">
      Please provide a valid phone number.
    </div>
  </div>
  <div class="mb-5">
    <input
      id="number_adults"
      type="text"
      placeholder="Number of adults accompanying you"
      required
      class="box-content h-48 w-6 w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
      name="number_adults"
    />
    <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
      Please provide number of adults accompanying you.
    </div>
  </div>
  <div class="mb-5">
    <input
      id="names_adults"
      type="text"
      placeholder="Names of adults accompanying you (full_name #1, full name #2, etc)"
      required
      class="box-content h-48 w-6 w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
      name="names_adults"
    />
  </div>
  <Button type="submit" size="lg" block>Pre-Register</Button>
  <div id="result" class="mt-3 text-center"></div>
</form>

<style>
  .invalid-feedback,
  .empty-feedback {
    display: none;
  }

  .was-validated :placeholder-shown:invalid ~ .empty-feedback {
    display: block;
  }

  .was-validated :not(:placeholder-shown):invalid ~ .invalid-feedback {
    display: block;
  }

  .is-invalid,
  .was-validated :invalid {
    border-color: #dc3545;
  }
</style>

<script is:inline>
  const form = document.getElementById("form");
  const result = document.getElementById("result");

  form.addEventListener("submit", function (e) {
    e.preventDefault();
    form.classList.add("was-validated");
    if (!form.checkValidity()) {
      form.querySelectorAll(":invalid")[0].focus();
      return;
    }
    const formData = new FormData(form);
    const object = Object.fromEntries(formData);
    const json = JSON.stringify(object);
    result.innerHTML = "Sending...";

    fetch("https://www.fiskefrost.com/api/preregistrationHandler", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Accept: "application/json",
      },
      body: json,
    })
      .then(async (response) => {
        let json = await response.json();
        console.log(json);
        if (response.status == 200) {
          result.classList.add("text-green-500");
          result.innerHTML = "Record created successfully.";
        } else {
          result.classList.add("text-red-500");
          result.innerHTML = "Failed to create record successfully.";
        }
      })
      .catch((error) => {
        console.log(error);
        result.innerHTML = "Something went wrong!";
      })
      .then(function () {
        form.reset();
        form.classList.remove("was-validated");
        setTimeout(() => {
          result.style.display = "none";
        }, 5000);
      });
  });
</script>
